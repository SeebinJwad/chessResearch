import pygame
from pygame.locals import *

pygame.init()
game_display = pygame.display.set_mode((300, 300))
pygame.display.set_caption('chess visu')

# DRAW BOARD CHECKERS ***************
def draw_checkers():
    for y in range(3):
        for x in range(3):
            if (y % 2 == 0 and x % 2 == 1) or (y % 2 == 1 and x % 2 == 0):
                pygame.draw.rect(game_display, (181, 136, 99), (x * 100, y * 100, 100, 100))
            else:
                pygame.draw.rect(game_display, (240, 217, 181), (x * 100, y * 100, 100, 100))


# DRAW BOARD CHECKERS ***************


def get_row_col(idx):
    # idx starts at 1
    idx -= 1
    row = (idx // 3)
    col = idx - 3 * row
    return row, col


def draw_king(idx, color='white'):
    row, col = get_row_col(idx)
    pygame.draw.rect(game_display, color, (10 + 100 * col, 30 + 100 * row, 80, 20))
    pygame.draw.rect(game_display, color, (40 + 100 * col, 10 + 100 * row, 20, 80))


def draw_rook(idx, color='white'):
    row, col = get_row_col(idx)
    pygame.draw.rect(game_display, color, (15 + 100 * col, 15 + 100 * row, 70, 70))


def draw_bishop(idx, color='white'):
    row, col = get_row_col(idx)
    pygame.draw.circle(game_display, color, (50 + 100 * col, 50 + 100 * row), 40)


def draw_board(board):
    draw_checkers()
    for idx, pos in enumerate(board):
        if pos < 0:
            color = (75, 69, 60)
        else:
            color = (238, 187, 0)
        pos = abs(pos)
        if pos == 1:
            draw_king(idx + 1, color=color)
        if pos == 2:
            draw_bishop(idx + 1, color=color)
        if pos == 3:
            draw_rook(idx + 1, color=color)

kings = [[1, 0, -1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, -1, 0, 0, 0], [1, 0, 0, 0, 0, 0, -1, 0, 0], [1, 0, 0, 0, 0, 0, 0, -1, 0], [1, 0, 0, 0, 0, 0, 0, 0, -1], [0, 1, 0, 0, 0, 0, -1, 0, 0], [0, 1, 0, 0, 0, 0, 0, -1, 0], [0, 1, 0, 0, 0, 0, 0, 0, -1], [-1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, -1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, -1, 0, 0], [0, 0, 1, 0, 0, 0, 0, -1, 0], [0, 0, 1, 0, 0, 0, 0, 0, -1], [0, 0, -1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, -1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, -1], [-1, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, -1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, -1, 0, 0], [-1, 0, 0, 0, 0, 0, 1, 0, 0], [0, -1, 0, 0, 0, 0, 1, 0, 0], [0, 0, -1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, -1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, -1], [-1, 0, 0, 0, 0, 0, 0, 1, 0], [0, -1, 0, 0, 0, 0, 0, 1, 0], [0, 0, -1, 0, 0, 0, 0, 1, 0], [-1, 0, 0, 0, 0, 0, 0, 0, 1], [0, -1, 0, 0, 0, 0, 0, 0, 1], [0, 0, -1, 0, 0, 0, 0, 0, 1], [0, 0, 0, -1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, -1, 0, 1]]
i = [[1, 3, -1, 0, 0, 0, 0, 0, 0], [1, 0, -1, 3, 0, 0, 0, 0, 0], [1, 0, -1, 0, 3, 0, 0, 0, 0], [1, 0, -1, 0, 0, 3, 0, 0, 0], [1, 0, -1, 0, 0, 0, 3, 0, 0], [1, 0, -1, 0, 0, 0, 0, 3, 0], [1, 0, -1, 0, 0, 0, 0, 0, 3], [1, 3, 0, 0, 0, -1, 0, 0, 0], [1, 0, 3, 0, 0, -1, 0, 0, 0], [1, 0, 0, 3, 0, -1, 0, 0, 0], [1, 0, 0, 0, 3, -1, 0, 0, 0], [1, 0, 0, 0, 0, -1, 3, 0, 0], [1, 0, 0, 0, 0, -1, 0, 3, 0], [1, 0, 0, 0, 0, -1, 0, 0, 3], [1, 3, 0, 0, 0, 0, -1, 0, 0], [1, 0, 3, 0, 0, 0, -1, 0, 0], [1, 0, 0, 3, 0, 0, -1, 0, 0], [1, 0, 0, 0, 3, 0, -1, 0, 0], [1, 0, 0, 0, 0, 3, -1, 0, 0], [1, 0, 0, 0, 0, 0, -1, 3, 0], [1, 0, 0, 0, 0, 0, -1, 0, 3], [1, 3, 0, 0, 0, 0, 0, -1, 0], [1, 0, 3, 0, 0, 0, 0, -1, 0], [1, 0, 0, 3, 0, 0, 0, -1, 0], [1, 0, 0, 0, 3, 0, 0, -1, 0], [1, 0, 0, 0, 0, 3, 0, -1, 0], [1, 0, 0, 0, 0, 0, 3, -1, 0], [1, 0, 0, 0, 0, 0, 0, -1, 3], [1, 3, 0, 0, 0, 0, 0, 0, -1], [1, 0, 3, 0, 0, 0, 0, 0, -1], [1, 0, 0, 3, 0, 0, 0, 0, -1], [1, 0, 0, 0, 3, 0, 0, 0, -1], [1, 0, 0, 0, 0, 3, 0, 0, -1], [1, 0, 0, 0, 0, 0, 3, 0, -1], [1, 0, 0, 0, 0, 0, 0, 3, -1], [3, 1, 0, 0, 0, 0, -1, 0, 0], [0, 1, 3, 0, 0, 0, -1, 0, 0], [0, 1, 0, 3, 0, 0, -1, 0, 0], [0, 1, 0, 0, 3, 0, -1, 0, 0], [0, 1, 0, 0, 0, 3, -1, 0, 0], [0, 1, 0, 0, 0, 0, -1, 3, 0], [0, 1, 0, 0, 0, 0, -1, 0, 3], [3, 1, 0, 0, 0, 0, 0, -1, 0], [0, 1, 3, 0, 0, 0, 0, -1, 0], [0, 1, 0, 3, 0, 0, 0, -1, 0], [0, 1, 0, 0, 3, 0, 0, -1, 0], [0, 1, 0, 0, 0, 3, 0, -1, 0], [0, 1, 0, 0, 0, 0, 3, -1, 0], [0, 1, 0, 0, 0, 0, 0, -1, 3], [3, 1, 0, 0, 0, 0, 0, 0, -1], [0, 1, 3, 0, 0, 0, 0, 0, -1], [0, 1, 0, 3, 0, 0, 0, 0, -1], [0, 1, 0, 0, 3, 0, 0, 0, -1], [0, 1, 0, 0, 0, 3, 0, 0, -1], [0, 1, 0, 0, 0, 0, 3, 0, -1], [0, 1, 0, 0, 0, 0, 0, 3, -1], [-1, 3, 1, 0, 0, 0, 0, 0, 0], [-1, 0, 1, 3, 0, 0, 0, 0, 0], [-1, 0, 1, 0, 3, 0, 0, 0, 0], [-1, 0, 1, 0, 0, 3, 0, 0, 0], [-1, 0, 1, 0, 0, 0, 3, 0, 0], [-1, 0, 1, 0, 0, 0, 0, 3, 0], [-1, 0, 1, 0, 0, 0, 0, 0, 3], [3, 0, 1, -1, 0, 0, 0, 0, 0], [0, 3, 1, -1, 0, 0, 0, 0, 0], [0, 0, 1, -1, 3, 0, 0, 0, 0], [0, 0, 1, -1, 0, 3, 0, 0, 0], [0, 0, 1, -1, 0, 0, 3, 0, 0], [0, 0, 1, -1, 0, 0, 0, 3, 0], [0, 0, 1, -1, 0, 0, 0, 0, 3], [3, 0, 1, 0, 0, 0, -1, 0, 0], [0, 3, 1, 0, 0, 0, -1, 0, 0], [0, 0, 1, 3, 0, 0, -1, 0, 0], [0, 0, 1, 0, 3, 0, -1, 0, 0], [0, 0, 1, 0, 0, 3, -1, 0, 0], [0, 0, 1, 0, 0, 0, -1, 3, 0], [0, 0, 1, 0, 0, 0, -1, 0, 3], [3, 0, 1, 0, 0, 0, 0, -1, 0], [0, 3, 1, 0, 0, 0, 0, -1, 0], [0, 0, 1, 3, 0, 0, 0, -1, 0], [0, 0, 1, 0, 3, 0, 0, -1, 0], [0, 0, 1, 0, 0, 3, 0, -1, 0], [0, 0, 1, 0, 0, 0, 3, -1, 0], [0, 0, 1, 0, 0, 0, 0, -1, 3], [3, 0, 1, 0, 0, 0, 0, 0, -1], [0, 3, 1, 0, 0, 0, 0, 0, -1], [0, 0, 1, 3, 0, 0, 0, 0, -1], [0, 0, 1, 0, 3, 0, 0, 0, -1], [0, 0, 1, 0, 0, 3, 0, 0, -1], [0, 0, 1, 0, 0, 0, 3, 0, -1], [0, 0, 1, 0, 0, 0, 0, 3, -1], [3, 0, -1, 1, 0, 0, 0, 0, 0], [0, 3, -1, 1, 0, 0, 0, 0, 0], [0, 0, -1, 1, 3, 0, 0, 0, 0], [0, 0, -1, 1, 0, 3, 0, 0, 0], [0, 0, -1, 1, 0, 0, 3, 0, 0], [0, 0, -1, 1, 0, 0, 0, 3, 0], [0, 0, -1, 1, 0, 0, 0, 0, 3], [3, 0, 0, 1, 0, -1, 0, 0, 0], [0, 3, 0, 1, 0, -1, 0, 0, 0], [0, 0, 3, 1, 0, -1, 0, 0, 0], [0, 0, 0, 1, 3, -1, 0, 0, 0], [0, 0, 0, 1, 0, -1, 3, 0, 0], [0, 0, 0, 1, 0, -1, 0, 3, 0], [0, 0, 0, 1, 0, -1, 0, 0, 3], [3, 0, 0, 1, 0, 0, 0, 0, -1], [0, 3, 0, 1, 0, 0, 0, 0, -1], [0, 0, 3, 1, 0, 0, 0, 0, -1], [0, 0, 0, 1, 3, 0, 0, 0, -1], [0, 0, 0, 1, 0, 3, 0, 0, -1], [0, 0, 0, 1, 0, 0, 3, 0, -1], [0, 0, 0, 1, 0, 0, 0, 3, -1], [-1, 3, 0, 0, 0, 1, 0, 0, 0], [-1, 0, 3, 0, 0, 1, 0, 0, 0], [-1, 0, 0, 3, 0, 1, 0, 0, 0], [-1, 0, 0, 0, 3, 1, 0, 0, 0], [-1, 0, 0, 0, 0, 1, 3, 0, 0], [-1, 0, 0, 0, 0, 1, 0, 3, 0], [-1, 0, 0, 0, 0, 1, 0, 0, 3], [3, 0, 0, -1, 0, 1, 0, 0, 0], [0, 3, 0, -1, 0, 1, 0, 0, 0], [0, 0, 3, -1, 0, 1, 0, 0, 0], [0, 0, 0, -1, 3, 1, 0, 0, 0], [0, 0, 0, -1, 0, 1, 3, 0, 0], [0, 0, 0, -1, 0, 1, 0, 3, 0], [0, 0, 0, -1, 0, 1, 0, 0, 3], [3, 0, 0, 0, 0, 1, -1, 0, 0], [0, 3, 0, 0, 0, 1, -1, 0, 0], [0, 0, 3, 0, 0, 1, -1, 0, 0], [0, 0, 0, 3, 0, 1, -1, 0, 0], [0, 0, 0, 0, 3, 1, -1, 0, 0], [0, 0, 0, 0, 0, 1, -1, 3, 0], [0, 0, 0, 0, 0, 1, -1, 0, 3], [-1, 3, 0, 0, 0, 0, 1, 0, 0], [-1, 0, 3, 0, 0, 0, 1, 0, 0], [-1, 0, 0, 3, 0, 0, 1, 0, 0], [-1, 0, 0, 0, 3, 0, 1, 0, 0], [-1, 0, 0, 0, 0, 3, 1, 0, 0], [-1, 0, 0, 0, 0, 0, 1, 3, 0], [-1, 0, 0, 0, 0, 0, 1, 0, 3], [3, -1, 0, 0, 0, 0, 1, 0, 0], [0, -1, 3, 0, 0, 0, 1, 0, 0], [0, -1, 0, 3, 0, 0, 1, 0, 0], [0, -1, 0, 0, 3, 0, 1, 0, 0], [0, -1, 0, 0, 0, 3, 1, 0, 0], [0, -1, 0, 0, 0, 0, 1, 3, 0], [0, -1, 0, 0, 0, 0, 1, 0, 3], [3, 0, -1, 0, 0, 0, 1, 0, 0], [0, 3, -1, 0, 0, 0, 1, 0, 0], [0, 0, -1, 3, 0, 0, 1, 0, 0], [0, 0, -1, 0, 3, 0, 1, 0, 0], [0, 0, -1, 0, 0, 3, 1, 0, 0], [0, 0, -1, 0, 0, 0, 1, 3, 0], [0, 0, -1, 0, 0, 0, 1, 0, 3], [3, 0, 0, 0, 0, -1, 1, 0, 0], [0, 3, 0, 0, 0, -1, 1, 0, 0], [0, 0, 3, 0, 0, -1, 1, 0, 0], [0, 0, 0, 3, 0, -1, 1, 0, 0], [0, 0, 0, 0, 3, -1, 1, 0, 0], [0, 0, 0, 0, 0, -1, 1, 3, 0], [0, 0, 0, 0, 0, -1, 1, 0, 3], [3, 0, 0, 0, 0, 0, 1, 0, -1], [0, 3, 0, 0, 0, 0, 1, 0, -1], [0, 0, 3, 0, 0, 0, 1, 0, -1], [0, 0, 0, 3, 0, 0, 1, 0, -1], [0, 0, 0, 0, 3, 0, 1, 0, -1], [0, 0, 0, 0, 0, 3, 1, 0, -1], [0, 0, 0, 0, 0, 0, 1, 3, -1], [-1, 3, 0, 0, 0, 0, 0, 1, 0], [-1, 0, 3, 0, 0, 0, 0, 1, 0], [-1, 0, 0, 3, 0, 0, 0, 1, 0], [-1, 0, 0, 0, 3, 0, 0, 1, 0], [-1, 0, 0, 0, 0, 3, 0, 1, 0], [-1, 0, 0, 0, 0, 0, 3, 1, 0], [-1, 0, 0, 0, 0, 0, 0, 1, 3], [3, -1, 0, 0, 0, 0, 0, 1, 0], [0, -1, 3, 0, 0, 0, 0, 1, 0], [0, -1, 0, 3, 0, 0, 0, 1, 0], [0, -1, 0, 0, 3, 0, 0, 1, 0], [0, -1, 0, 0, 0, 3, 0, 1, 0], [0, -1, 0, 0, 0, 0, 3, 1, 0], [0, -1, 0, 0, 0, 0, 0, 1, 3], [3, 0, -1, 0, 0, 0, 0, 1, 0], [0, 3, -1, 0, 0, 0, 0, 1, 0], [0, 0, -1, 3, 0, 0, 0, 1, 0], [0, 0, -1, 0, 3, 0, 0, 1, 0], [0, 0, -1, 0, 0, 3, 0, 1, 0], [0, 0, -1, 0, 0, 0, 3, 1, 0], [0, 0, -1, 0, 0, 0, 0, 1, 3], [-1, 3, 0, 0, 0, 0, 0, 0, 1], [-1, 0, 3, 0, 0, 0, 0, 0, 1], [-1, 0, 0, 3, 0, 0, 0, 0, 1], [-1, 0, 0, 0, 3, 0, 0, 0, 1], [-1, 0, 0, 0, 0, 3, 0, 0, 1], [-1, 0, 0, 0, 0, 0, 3, 0, 1], [-1, 0, 0, 0, 0, 0, 0, 3, 1], [3, -1, 0, 0, 0, 0, 0, 0, 1], [0, -1, 3, 0, 0, 0, 0, 0, 1], [0, -1, 0, 3, 0, 0, 0, 0, 1], [0, -1, 0, 0, 3, 0, 0, 0, 1], [0, -1, 0, 0, 0, 3, 0, 0, 1], [0, -1, 0, 0, 0, 0, 3, 0, 1], [0, -1, 0, 0, 0, 0, 0, 3, 1], [3, 0, -1, 0, 0, 0, 0, 0, 1], [0, 3, -1, 0, 0, 0, 0, 0, 1], [0, 0, -1, 3, 0, 0, 0, 0, 1], [0, 0, -1, 0, 3, 0, 0, 0, 1], [0, 0, -1, 0, 0, 3, 0, 0, 1], [0, 0, -1, 0, 0, 0, 3, 0, 1], [0, 0, -1, 0, 0, 0, 0, 3, 1], [3, 0, 0, -1, 0, 0, 0, 0, 1], [0, 3, 0, -1, 0, 0, 0, 0, 1], [0, 0, 3, -1, 0, 0, 0, 0, 1], [0, 0, 0, -1, 3, 0, 0, 0, 1], [0, 0, 0, -1, 0, 3, 0, 0, 1], [0, 0, 0, -1, 0, 0, 3, 0, 1], [0, 0, 0, -1, 0, 0, 0, 3, 1], [3, 0, 0, 0, 0, 0, -1, 0, 1], [0, 3, 0, 0, 0, 0, -1, 0, 1], [0, 0, 3, 0, 0, 0, -1, 0, 1], [0, 0, 0, 3, 0, 0, -1, 0, 1], [0, 0, 0, 0, 3, 0, -1, 0, 1], [0, 0, 0, 0, 0, 3, -1, 0, 1], [0, 0, 0, 0, 0, 0, -1, 3, 1]]
i.insert(0, [0,0,1,0,0,0,0,3,-1])
i = kings
draw_board(i[0])
x = 1


def event_handler():
    global x
    for event in pygame.event.get():
        if event.type == pygame.MOUSEBUTTONDOWN:
            x += 1
            draw_board(i[x])
            print(i[x])
        if event.type == QUIT:
            pygame.quit()
            quit()


while True:
    event_handler()
    pygame.display.update()
